<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>DBT Coping Skills App</title>
  <style>
    :root {
      --bg-color: #f0f4f8;
      --text-color: #333;
      --container-bg: white;
      --button-bg: #2980b9;
      --button-hover: #3498db;
    }
    body.dark {
      --bg-color: #1e1e1e;
      --text-color: #f0f0f0;
      --container-bg: #2c2c2c;
      --button-bg: #444;
      --button-hover: #666;
    }
    * {
      box-sizing: border-box;
    }
    body {
      font-family: Arial, sans-serif;
      background: var(--bg-color);
      color: var(--text-color);
      padding: 1em;
      margin: 0;
    }
    .container {
      max-width: 600px;
      margin: auto;
      background: var(--container-bg);
      padding: 1.5em;
      border-radius: 10px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    }
    h1, h2 {
      text-align: center;
    }
    label {
      margin-top: 1em;
      display: block;
    }
    input, select, textarea, button {
      width: 100%;
      padding: 0.75em;
      margin-top: 0.5em;
      border-radius: 5px;
      border: 1px solid #ccc;
      font-size: 1em;
    }
    button {
      background: var(--button-bg);
      color: white;
      border: none;
      cursor: pointer;
      margin-top: 1em;
    }
    button:hover {
      background: var(--button-hover);
    }
    #suggestions, #journal {
      margin-top: 2em;
      background: #f9f9f9;
      padding: 1em;
      border-radius: 5px;
    }
    .journal-actions, .top-actions {
      display: flex;
      justify-content: space-between;
      margin-top: 1em;
      flex-wrap: wrap;
      gap: 0.5em;
    }
    .journal-actions button, .top-actions button {
      flex: 1 1 48%;
      background-color: #555;
    }
    .audio-button {
      display: inline-block;
      margin-left: 10px;
      background: #888;
      color: white;
      border: none;
      padding: 0.3em 0.6em;
      border-radius: 4px;
      cursor: pointer;
    }
    footer {
      margin-top: 2em;
      font-size: 0.9em;
      text-align: center;
      color: #777;
    }
    @media screen and (max-width: 600px) {
      .journal-actions button, .top-actions button {
        flex: 1 1 100%;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="top-actions">
      <button onclick="toggleTheme()">Toggle Light/Dark Mode</button>
    </div>
    <h1>🧠 DBT Coping Skill App</h1>
    <p style="text-align:center">Feeling overwhelmed? Get a helpful DBT-based suggestion.</p>

    <form id="copingForm">
      <label for="emotion">How are you feeling?</label>
      <input type="text" id="emotion" name="emotion" placeholder="e.g., anxious, sad" required>

      <label for="goal">What do you need help with?</label>
      <select id="goal" name="goal" required>
        <option value="">Choose one</option>
        <option value="emotion regulation">Emotion Regulation</option>
        <option value="distress tolerance">Distress Tolerance</option>
        <option value="mindfulness">Mindfulness</option>
        <option value="interpersonal effectiveness">Interpersonal Effectiveness</option>
      </select>

      <label for="notes">Would you like to leave a note for yourself?</label>
      <textarea id="notes" rows="3" placeholder="Reflect or track how you're feeling today..."></textarea>

      <button type="submit">Get Coping Suggestions</button>
    </form>

    <div id="suggestions"></div>
    <div id="journal">
      <h2>Your Mood Journal</h2>
      <ul id="journalEntries"></ul>
      <div class="journal-actions">
        <button onclick="downloadJournal()">Download Journal</button>
        <button onclick="clearJournal()">Clear Journal</button>
      </div>
    </div>

    <footer>
      <p><strong>Disclaimer:</strong> This app offers general support based on DBT techniques. It does not replace professional care. If you're in crisis, call or text <strong>988</strong> or go to the nearest emergency room.</p>
    </footer>
  </div>

  <script>
    const skills = {
      "emotion regulation": [
        { text: "Try 'Opposite Action': When your emotions urge a specific behavior (like hiding when sad), do the opposite to shift your mood.", audio: "audio/emotion_opposite_action.mp3" },
        { text: "Use 'PLEASE': Take care of your body with balanced meals, avoid substances, exercise, sleep well—physical wellness impacts emotions.", audio: "audio/emotion_please.mp3" },
        { text: "Make a joy list: List small actions that bring joy—like petting a dog, dancing, or drawing—and do one now.", audio: "audio/emotion_joy_list.mp3" }
      ],
      "distress tolerance": [
        { text: "Use 'TIPP': Regulate body chemistry quickly using cold water (Temperature), intense movement, paced breathing, and muscle relaxation.", audio: "audio/distress_tipp.mp3" },
        { text: "Distract using 'ACCEPTS': Engage in Activities, help others (Contributing), compare past successes, shift Emotions, Push away stress, focus Thoughts, or use Sensory tools.", audio: "audio/distress_accepts.mp3" },
        { text: "Grab something grounding (like an ice cube or textured object) and focus only on it for 1 minute to calm distress.", audio: "audio/distress_grounding.mp3" }
      ],
      "mindfulness": [
        { text: "'Observe, Describe, Participate': Notice your experiences without judgment, put them into words, and engage fully in the moment.", audio: "audio/mindfulness_odp.mp3" },
        { text: "Use 'Wise Mind': Combine your Emotional Mind and Rational Mind for balanced, intuitive decision-making.", audio: "audio/mindfulness_wisemind.mp3" },
        { text: "Breathing meditation: Inhale slowly (count to 4), exhale (count to 4), and repeat while gently labeling the breath.", audio: "audio/mindfulness_breathing.mp3" }
      ],
      "interpersonal effectiveness": [
        { text: "Use 'DEAR MAN': Express needs clearly—Describe the situation, Express feelings, Assert needs, Reinforce outcomes, stay Mindful, Appear confident, and Negotiate.", audio: "audio/interpersonal_dearman.mp3" },
        { text: "'GIVE' for relationships: Be Gentle, show Interest, Validate the other, and keep an Easy manner.", audio: "audio/interpersonal_give.mp3" },
        { text: "'FAST' for self-respect: Be Fair, don’t over-Apologize, Stick to your values, and be Truthful.", audio: "audio/interpersonal_fast.mp3" }
      ]
    };

    function getPersonalizedSkills(goal, entries) {
      if (!entries || entries.length === 0) return skills[goal] || [];
      const commonWords = {};
      entries.forEach(e => {
        e.note.split(/\s+/).forEach(word => {
          const w = word.toLowerCase().replace(/[^a-z]/g, '');
          if (w.length > 3) commonWords[w] = (commonWords[w] || 0) + 1;
        });
      });
      const keywords = Object.keys(commonWords).sort((a, b) => commonWords[b] - commonWords[a]);
      const match = keywords.find(k => skills[goal]?.some(s => s.text.toLowerCase().includes(k)));
      return match ? skills[goal].filter(s => s.text.toLowerCase().includes(match)) : skills[goal];
    }

    function playAudio(url) {
      const audio = new Audio(url);
      audio.play();
    }

    function saveJournalEntry(entry) {
      const entries = JSON.parse(localStorage.getItem("dbtJournal") || "[]");
      entries.unshift(entry);
      localStorage.setItem("dbtJournal", JSON.stringify(entries));
    }

    function loadJournalEntries() {
      const entries = JSON.parse(localStorage.getItem("dbtJournal") || "[]");
      const journalList = document.getElementById("journalEntries");
      journalList.innerHTML = "";
      entries.forEach(entry => {
        const li = document.createElement("li");
        li.innerHTML = `<strong>${entry.date}</strong> - Feeling: ${entry.emotion}<br><em>${entry.note}</em>`;
        journalList.appendChild(li);
      });
    }

    function downloadJournal() {
      const entries = JSON.parse(localStorage.getItem("dbtJournal") || "[]");
      let content = "Your DBT Mood Journal\n\n";
      entries.forEach(e => {
        content += `${e.date} - Feeling: ${e.emotion}\nNote: ${e.note}\n\n`;
      });
      const blob = new Blob([content], { type: "text/plain" });
      const link = document.createElement("a");
      link.href = URL.createObjectURL(blob);
      link.download = "dbt_mood_journal.txt";
      link.click();
    }

    function clearJournal() {
      if (confirm("Are you sure you want to clear your journal? This cannot be undone.")) {
        localStorage.removeItem("dbtJournal");
        loadJournalEntries();
      }
    }

    function toggleTheme() {
      const isDark = document.body.classList.toggle("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    }

    function loadTheme() {
      const savedTheme = localStorage.getItem("theme");
      const prefersDark = window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches;
      if (savedTheme === "dark" || (!savedTheme && prefersDark)) {
        document.body.classList.add("dark");
      }
    }

    document.getElementById('copingForm').addEventListener('submit', function(e) {
      e.preventDefault();
      const goal = document.getElementById('goal').value;
      const emotion = document.getElementById('emotion').value;
      const note = document.getElementById('notes').value;
      const entries = JSON.parse(localStorage.getItem("dbtJournal") || "[]");
      const suggestions = getPersonalizedSkills(goal, entries);

      const entry = {
        emotion,
        note,
        date: new Date().toLocaleString()
      };
      saveJournalEntry(entry);
      loadJournalEntries();

      let html = `<h2>Your Suggestions</h2><p><strong>Emotion:</strong> ${emotion}</p>`;
      if (note) html += `<p><strong>Your Note:</strong> ${note}</p>`;
      html += '<ul>';
      suggestions.forEach(s => {
        html += `<li>${s.text} <button class="audio-button" onclick="playAudio('${s.audio}')">▶️</button></li>`;
      });
      html += '</ul>';

      document.getElementById('suggestions').innerHTML = html;
      window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' });
    });

    window.addEventListener("load", () => {
      loadTheme();
      loadJournalEntries();
    });
  </script>
</body>
</html>
